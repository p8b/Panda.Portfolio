@using MudBlazor.Services;
@using Panda.Portfolio.WebUI.Pages.SettingsPage
@using Panda.RubikCube.Entities;
@using Panda.RubikCube;
@using Panda.RubikCube.Enums;
@attribute [Route(NavMenu.RubikCubeGame)]
@implements IAsyncDisposable
<MudGrid Class="d-flex justify-center">
	<MudItem xs="12">
		<MudText Typo="Typo.h3">Rubik's Cube</MudText>
		<ContainerSettings />
		<ThemeSettings />
	</MudItem>
	<MudItem xs="@(CubeDisplaySize > Width.md ? 0 : 12)">
		<div class="d-flex">
			<div class="@($"scrambler mx-auto {CubeDisplaySize.ToString()}")">
				<div class="@($"wrap-cube {moveHoverWrapClass} {CubeDisplaySize.ToString()}")">
					@foreach (var face in Enum.GetValues<FaceSide>())
					{
						<CubeFaceComponent CubeFace="Cube.Faces[(int)face]"
							ShowCoordinates="ShowCoordinates"
							CubeDisplaySize="CubeDisplaySize" />
					}
				</div>
			</div>
		</div>
	</MudItem>
	<MudItem xs="@(CubeDisplaySize > Width.md ? 0 : 12)">
		<div class="d-flex">
			<div class="mx-auto" style="width:25em">
				<MudGrid >
					<MudItem xs="12" Class="d-flex justify-space-between">
						@foreach (var face in Enum.GetValues<FaceSide>())
						{
							<MudButtonGroup Variant="Variant.Outlined"
								DisableElevation
								VerticalAlign="true"
								Size="Size.Small"
								OverrideStyles="true">
								<MudFab Label="@(face.ToString()[0].ToString())"
									Class="@($"group-button-local")"
									onmouseover="@(() => MouseoverClockwise(face))"
									onmouseout="@(()=> MouseOut())"
									OnClick="@(()=> Move(face, Rotation.Clockwise))" />
								<MudFab Label="@($"{face.ToString()[0].ToString()}'")"
									Class="@($"group-button-local")"
									onmouseover="@(() => MouseoverCounterclockwise(face))"
									onmouseout="@(()=> MouseOut())"
 									OnClick="@(()=> Move(face, Rotation.CounterClockwise))" />
							</MudButtonGroup>
						}
					</MudItem>
					<MudItem xs="12">
						<MudButtonGroup Variant="Variant.Filled"
							Class="d-flex gap-2 flex-grow-1"
							DisableElevation
							OverrideStyles="true">
							<MudButton DisableElevation
								FullWidth
								OnClick="MixUp" >
								@(Cube.Mixing ? "Mixing up" : "Mix up")
							</MudButton>
							<MudButton DisableElevation
								FullWidth
								Disabled="@Cube.Solved"
								OnClick="Solve">
								@(Cube.Solving ? "Solving" : "Solve")
							</MudButton>
						</MudButtonGroup>
					</MudItem>
					<MudItem xs="12">
						<MudExpansionPanels>
							<MudExpansionPanel IsInitiallyExpanded="false">
								<TitleContent>
									<div class="d-flex align-center">
										<MudText Class="mr-2">@($"History ({Cube.MoveHistory.Count})")</MudText>
										<MudButton Size="Size.Small"
											DisableElevation
											Disabled="@(Cube.MoveHistory.Count == 0)"
											OnClick="Clear" >
											Clear
										</MudButton>
									</div>
								</TitleContent>
								<ChildContent>
									<div style="max-height:200px; overflow-y:scroll;">
										@GetHistory()
									</div>
								</ChildContent>
							</MudExpansionPanel>
						</MudExpansionPanels>
					</MudItem>
					<MudItem xs="12">
						<MudExpansionPanels>
							<MudExpansionPanel IsInitiallyExpanded="false" Text="Settings">
								<MudGrid>
										<MudItem xs="12">
										<MudSelect T="int"
											Label="Cube Size"
											Value="CubeSize"
											ValueChanged="SetCubeSize">
											<MudSelectItem Value="1" />
											<MudSelectItem Value="2" />
											<MudSelectItem Value="3" />
										</MudSelect>
									</MudItem>
									<MudItem xs="12" Class="d-flex">
										<MudFab Label="Toggle Coordinates"
											Class="mx-auto"
											DisableElevation
											OnClick="ToggleCoordinates" />
									</MudItem>
								</MudGrid>
							</MudExpansionPanel>
						</MudExpansionPanels>
					</MudItem>
				</MudGrid>
			</div>
		</div>
	</MudItem>
</MudGrid>

